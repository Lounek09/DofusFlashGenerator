<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAKCgAAAEAIABoGgAAFgAAACgAAAAoAAAAUAAAAAEAIAAAAAAAABkAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABwoMEAbLi4cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0oMGAdKTD7HSkw3yAo
        MCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0oMGAdKTD7N1llvig+R80dKTDfICgwIAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0o
        MGAdKTD7OlxnwkFpdf9Ca3bcMUtWyR0pL+cdJzE0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0oMGAdKTD7O1xnxEFpdf9BanXjUoeU41WL
        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
        df9BaXX/QWl1/0Fpdf9BaXX/QWl1/0FodfA1U12/Hisz9x0pMP8dKTD/JztD6XvI3NaA0Ob/gNDm/12W
        pr8dKS/3HigvTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHSgwYB0p
        MPtJdoPBVYuZ/1WLmf9Vi5n/VYuZ/1WLmf9Vi5n/VYuZ/1OIlu1IdYHAQWl28EFpdf9BaXX/QWl1/0Fp
        df9BaXX/QWl1/z5kb80fLDT0HSkw/x0pMNsnO0PpfMrf2F6XqcAdKS/3HigvTAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGyowMB0pMPtIcn7AVYuZ/1WLmf9Vi5n/VYuZ/1WL
        mf9Ui5jmRW97vzFLVMsmOUHgKT9I2C1GUMwxTVa9P2Rw0UFpdf9BaXX/QWl1/0Fpdf9BaXX/PmJvyx4q
        MfscKzJIHSkwjyIxOfQdKS/3HigvTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAEBABB4pMM81UlvHVYuZ/1WLmf9Vi5n/VYuZ/1WLmf9CanbAHyw09y87PuZygnTAkaONwpSm
        kMOGloO/OkdH2x0pMP8vSlTCQWl09EFpdf9BaXX/QWl1/0Fpdf81VV+/HikwzyAgQAgdKDCLHikxRAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4oMXgjMzrpVYqY8FyV
        puBVi5n/VYuZ/1WLmfcxTVjKKjY67ZeokMSvwqX7r8Kl/6/Cpf+vwqX/r8Kl/6/Cpf+ktpzPNkVF3Sc8
        Rc9BaHTtQWl1/0Fpdf9BaXX/QWl1/yU4QNYdKjB0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABUqKgwdKTDvQmp2wFaMm/t+zeTWVYuZ/1WLmf80UFvILzs+5qy/
        o+CvwqX/fI10wVVlUeNUZE/3V2ZR4FpqVNFkdF7Ef5J5wqzAo+xAT0zWJTdA2EFodO1BaXX/QWl1/0Fp
        df8+ZG/NHSkw7yAwMBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAeKC9MHiox+1SKmO1mpbbKgtDo/1aMm/tIcn7AISsy+6m8odivwqX/YnJdxVRkT/9UZE//VGRP/1Rk
        T/9UZE//VGRP/1RkT/9sfGXArsGl8DRBQuAuSFHEQWl1/0Fpdf9BaXX/QWl1/yc6QtMdKDCLAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHSkvly5HUM9Vi5n/fMjeyILQ
        6P9alKLjJTY/43KCdMCvwqX/pLeb5oiagMeTpYvPipyDyHKCbMBXZlHgVGRP/1RkT/9UZE//VGRP/4+h
        hsuarZXHHSkw/z9mcdZBaXX/QWl1/0Fpdf84WWTAHSkwwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0pMMtBaXS/WpOi6YLQ6PuC0Oj/XJOkth0pMP+twaTtr8Kl/6/C
        pf+vwqX/r8Kl/6/Cpf+vwqX/rcGj+3yNdMFUY070VGRP/1RkT/9dbFfNr8Kl+y87PuYvSlTCQWl1/0Fp
        df9BaXX/QGdz2B0pMO8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAdKDDjR3N/wWqrvMWC0Oj/gtDo/1yRorc2RUXdr8Kl/6/Cpf+vwqX/r8Kl/6/Cpf+vwqX/r8Kl/6/C
        pf+vwqX/m6yS2FRkUO1UZE//VGRP962/ovdvf3LBJThA1kFpdf9BaXX/QWl1/0Jqds4dKTD/IDAwEAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHSkw+0t6hcN7xtzFgtDo/4LQ
        6P9bjqC8SllUz6/Cpf+vwqX/r8Kl/6/Cpf+vwqX/r8Kl/6/Cpf+vwqX/r8Kl/6/Cpf+XqY/TVGRP91Rk
        T/+jtpnjjJ2IwSQ2PuNCaXXtQWl1/0Fpdf9JdIO/HSkw/x0pLiwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0pMPtLeoXDgc3k24LQ6P+C0Oj/aaa5wERST9OvwqX/r8Kl/7DD
        pvvW4NHD2OLUwrXHq/CvwqX/r8Kl/6/Cpf+vwqX/r8Kl/2h4YsFUZE//qbyf8IKTgL8pP0jYRW98xEFp
        df9BaXX/T4GP0R0pMP8cKDBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAdKTDbSXaDwYLP5+mC0Oj/gtDo/3e/1ssqNjrtr8Kl/6/Cpf/r8OrB///////////////wusux46/C
        pf+vwqX/r8Kl/6/Cpf+brJLYV2hT2K/Cpf9dbmTFOFdixEx8isdBaXX/Qml17VSJluAdKTD/HCsyJAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHCkws0Bncb+C0Oj/gtDo/4LQ
        6P+BzubpHysz+6e6nta1x6vw/v7+9P///////////////+ju5sCvwqX/r8Kl/6/Cpf+vwqX/r8Kl/4ye
        hcqwwqX3KjY67U1+isdTiJbtQWl1/0VyfsBOfozIHSkw+xUqKgwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0pL3wpP0jYgtDo/4LQ6P+C0Oj/gtDo/0hvfMdYZmDIv8632///
        //v////////////////o7ubAr8Kl/6/Cpf+vwqX/r8Kl/6/Cpf+vwqX/fo5+wCIxOe1VipjwVYuZ/0Jq
        d91NfovKQWl0vx0pML8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAgJjMoHSkw/4DL492C0Oj/gtDo/4LQ6P+Ay+PdIzQ98JChjMH19/TI///////////////3usux46/C
        pf+vwqX/r8Kl/6/Cpf+vwqX/obKZyyErMvtQgYzKVYuZ/1WLmf9IdYHAU4mW7CM0PeYeKTBwAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0pL8dajp/AgtDo/4LQ
        6P+C0Oj/gtDo/3e908ofKzP7jJ6Lv9Dbysfj6uC/v86326/Cpf+vwqX/r8Kl/6/Cpf+vwqX/l6iQxCEu
        NPdBaXS/VYuZ/1WLmf9Vi5n/VImW8E1+iscdKS/3GiYzFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeKC9MHysz+4DL492C0Oj/gtDo/4LQ6P+C0Oj/crfNxSIx
        OfRNXFfNn7GXyq/BpPSvwqX/r8Kl/6/Cpf+nuZ7TTVxXzR4qMftFb3u/VYuZ/1WLmf9Vi5n/VYuZ/1WK
        mfQpPUXbHCovhwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAB0pMMM+YG3NgtDo+4LQ6P+C0Oj/gtDo/4LQ6P+BzeTgTnuLwx8rM/sdKTD/Lzs+5jE+
        QeMhLjT3Hiox+zVSW8dSh5TWVYuZ/1WLmf9Vi5n/VYuZ/1WLmf81VV7FHSkv5yAqNRgAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgKDAgHSkw71yT
        o7+C0Oj/gtDo/4LQ6P+C0Oj/gtDo8HjB1sFoqru8VImWwEt6hcNNforHUYSRz1SLmOZVi5n/VYuZ/1WL
        mf9Vi5n/VYuZ/1WLmf9Fb3u/HSkw+xspMjgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABspMjgdKTDzYJeqwILQ6P+C0Oj/gtDo/4LQ
        6P+C0Oj/fMffymqrvMVYkJ/tVYuZ/1WLmf9Vi5n/VYuZ/1WLmf9Vi5n/VYuZ/1WLmf9JdoPBHiox+x0o
        MGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAHSkuLB4pMM9BZHHLgc3k4ILQ6P+C0Oj/gtDo/4LQ6P+C0Oj/gtDo+37L
        489mpbbLVoyb+1WLmf9Vi5n/VYuZ/1WKmfQ4V2LEHSkw/xwpMGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAQEAEHikwmyIxOfRgl6rAgc7l44HP5uN+y+HNdLvPv2altspblaTjVoyb+1WLmf9Vi5n/VIqY7URs
        eL8jMzrpHCov1xspMjgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcKi9cHikwzx0p
        MP8jND3mLURM0zhZZcNEbHi/SnaDwkl2g8FCanbAMUtUyx8sNPcdKTDzHiowgABAQAQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeKTFEHSgwix0pMMMdKTDrHSkw/x0p
        MP8dKS/nHSkw0x0qMJ8dKTFYFSoqDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/////z8AAAD////+HwAAAP//
        //wPAAAA////+AcAAAD////wAwAAAP///+ABAAAA////wAAAAAD///+AAAAAAP///wABAAAA///+AAMA
        AAD///wABwAAAP/g+AAPAAAA/wAIAB8AAAD8AAAAPwAAAPgAAAB/AAAA8AAAAP8AAADgAAAB/wAAAMAA
        AAP/AAAAgAAAB/8AAACAAAAf/wAAAAAAAA//AAAAAAAAD/8AAAAAAAAP/wAAAAAAAA//AAAAAAAAB/8A
        AAAAAAAH/wAAAAAAAAf/AAAAAAAAB/8AAAAAAAAH/wAAAAAAAA//AAAAAAAAD/8AAACAAAAP/wAAAIAA
        AB//AAAAwAAAH/8AAADAAAA//wAAAOAAAH//AAAA8AAA//8AAAD4AAH//wAAAP4AA///AAAA/4AP//8A
        AAA=
</value>
  </data>
</root>